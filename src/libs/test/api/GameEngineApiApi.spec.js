/**
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SnippetsApi);
  }
}(this, function(expect, SnippetsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SnippetsApi.GameEngineApiApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GameEngineApiApi', function() {
    describe('gameEngineApiGameroundprofiledataCreate', function() {
      it('should call gameEngineApiGameroundprofiledataCreate successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiGameroundprofiledataCreate
        //instance.gameEngineApiGameroundprofiledataCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiGameroundprofiledataList', function() {
      it('should call gameEngineApiGameroundprofiledataList successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiGameroundprofiledataList
        //instance.gameEngineApiGameroundprofiledataList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiGameroundprofiledataPartialUpdate', function() {
      it('should call gameEngineApiGameroundprofiledataPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiGameroundprofiledataPartialUpdate
        //instance.gameEngineApiGameroundprofiledataPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiGameroundprofiledataRead', function() {
      it('should call gameEngineApiGameroundprofiledataRead successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiGameroundprofiledataRead
        //instance.gameEngineApiGameroundprofiledataRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiGameroundprofiledataUpdate', function() {
      it('should call gameEngineApiGameroundprofiledataUpdate successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiGameroundprofiledataUpdate
        //instance.gameEngineApiGameroundprofiledataUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiProfilesList', function() {
      it('should call gameEngineApiProfilesList successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiProfilesList
        //instance.gameEngineApiProfilesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiProfilesPartialUpdate', function() {
      it('should call gameEngineApiProfilesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiProfilesPartialUpdate
        //instance.gameEngineApiProfilesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiProfilesRead', function() {
      it('should call gameEngineApiProfilesRead successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiProfilesRead
        //instance.gameEngineApiProfilesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiProfilesUpdate', function() {
      it('should call gameEngineApiProfilesUpdate successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiProfilesUpdate
        //instance.gameEngineApiProfilesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionOpsDelete', function() {
      it('should call gameEngineApiSessionOpsDelete successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionOpsDelete
        //instance.gameEngineApiSessionOpsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionOpsList', function() {
      it('should call gameEngineApiSessionOpsList successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionOpsList
        //instance.gameEngineApiSessionOpsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionOpsUpdate', function() {
      it('should call gameEngineApiSessionOpsUpdate successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionOpsUpdate
        //instance.gameEngineApiSessionOpsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionProfilesList', function() {
      it('should call gameEngineApiSessionProfilesList successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionProfilesList
        //instance.gameEngineApiSessionProfilesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionRoundsList', function() {
      it('should call gameEngineApiSessionRoundsList successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionRoundsList
        //instance.gameEngineApiSessionRoundsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionSubmissionsList', function() {
      it('should call gameEngineApiSessionSubmissionsList successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionSubmissionsList
        //instance.gameEngineApiSessionSubmissionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionViewList', function() {
      it('should call gameEngineApiSessionViewList successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionViewList
        //instance.gameEngineApiSessionViewList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionsCreate', function() {
      it('should call gameEngineApiSessionsCreate successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionsCreate
        //instance.gameEngineApiSessionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionsList', function() {
      it('should call gameEngineApiSessionsList successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionsList
        //instance.gameEngineApiSessionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionsPartialUpdate', function() {
      it('should call gameEngineApiSessionsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionsPartialUpdate
        //instance.gameEngineApiSessionsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionsRead', function() {
      it('should call gameEngineApiSessionsRead successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionsRead
        //instance.gameEngineApiSessionsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameEngineApiSessionsUpdate', function() {
      it('should call gameEngineApiSessionsUpdate successfully', function(done) {
        //uncomment below and update the code to test gameEngineApiSessionsUpdate
        //instance.gameEngineApiSessionsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
