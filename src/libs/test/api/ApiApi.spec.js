/**
 * Snippets API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SnippetsApi);
  }
}(this, function(expect, SnippetsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SnippetsApi.ApiApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiApi', function() {
    describe('apiBlackCardsList', function() {
      it('should call apiBlackCardsList successfully', function(done) {
        //uncomment below and update the code to test apiBlackCardsList
        //instance.apiBlackCardsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBlackCardsPartialUpdate', function() {
      it('should call apiBlackCardsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test apiBlackCardsPartialUpdate
        //instance.apiBlackCardsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBlackCardsRead', function() {
      it('should call apiBlackCardsRead successfully', function(done) {
        //uncomment below and update the code to test apiBlackCardsRead
        //instance.apiBlackCardsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiBlackCardsUpdate', function() {
      it('should call apiBlackCardsUpdate successfully', function(done) {
        //uncomment below and update the code to test apiBlackCardsUpdate
        //instance.apiBlackCardsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthLoginCreate', function() {
      it('should call apiRestAuthLoginCreate successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthLoginCreate
        //instance.apiRestAuthLoginCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthLogoutCreate', function() {
      it('should call apiRestAuthLogoutCreate successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthLogoutCreate
        //instance.apiRestAuthLogoutCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthLogoutList', function() {
      it('should call apiRestAuthLogoutList successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthLogoutList
        //instance.apiRestAuthLogoutList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthPasswordChangeCreate', function() {
      it('should call apiRestAuthPasswordChangeCreate successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthPasswordChangeCreate
        //instance.apiRestAuthPasswordChangeCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthPasswordResetConfirmCreate', function() {
      it('should call apiRestAuthPasswordResetConfirmCreate successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthPasswordResetConfirmCreate
        //instance.apiRestAuthPasswordResetConfirmCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthPasswordResetCreate', function() {
      it('should call apiRestAuthPasswordResetCreate successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthPasswordResetCreate
        //instance.apiRestAuthPasswordResetCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthRegistrationCreate', function() {
      it('should call apiRestAuthRegistrationCreate successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthRegistrationCreate
        //instance.apiRestAuthRegistrationCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthRegistrationVerifyEmailCreate', function() {
      it('should call apiRestAuthRegistrationVerifyEmailCreate successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthRegistrationVerifyEmailCreate
        //instance.apiRestAuthRegistrationVerifyEmailCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthUserPartialUpdate', function() {
      it('should call apiRestAuthUserPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthUserPartialUpdate
        //instance.apiRestAuthUserPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthUserRead', function() {
      it('should call apiRestAuthUserRead successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthUserRead
        //instance.apiRestAuthUserRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiRestAuthUserUpdate', function() {
      it('should call apiRestAuthUserUpdate successfully', function(done) {
        //uncomment below and update the code to test apiRestAuthUserUpdate
        //instance.apiRestAuthUserUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiWhiteCardsList', function() {
      it('should call apiWhiteCardsList successfully', function(done) {
        //uncomment below and update the code to test apiWhiteCardsList
        //instance.apiWhiteCardsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiWhiteCardsPartialUpdate', function() {
      it('should call apiWhiteCardsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test apiWhiteCardsPartialUpdate
        //instance.apiWhiteCardsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiWhiteCardsRead', function() {
      it('should call apiWhiteCardsRead successfully', function(done) {
        //uncomment below and update the code to test apiWhiteCardsRead
        //instance.apiWhiteCardsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiWhiteCardsUpdate', function() {
      it('should call apiWhiteCardsUpdate successfully', function(done) {
        //uncomment below and update the code to test apiWhiteCardsUpdate
        //instance.apiWhiteCardsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
