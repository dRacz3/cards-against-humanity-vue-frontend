/**
 * CardsAgainstHumanity-Django API
 * Test description
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GameRoundWinnerUserGroups from './GameRoundWinnerUserGroups';
import GameRoundWinnerUserPermissions from './GameRoundWinnerUserPermissions';

/**
 * The GameRoundWinnerUser model module.
 * @module model/GameRoundWinnerUser
 * @version v1
 */
class GameRoundWinnerUser {
    /**
     * Constructs a new <code>GameRoundWinnerUser</code>.
     * @alias module:model/GameRoundWinnerUser
     * @param password {String} 
     * @param username {String} Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
     */
    constructor(password, username) { 
        
        GameRoundWinnerUser.initialize(this, password, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, password, username) { 
        obj['password'] = password;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>GameRoundWinnerUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GameRoundWinnerUser} obj Optional instance to populate.
     * @return {module:model/GameRoundWinnerUser} The populated <code>GameRoundWinnerUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GameRoundWinnerUser();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('last_login')) {
                obj['last_login'] = ApiClient.convertToType(data['last_login'], 'Date');
            }
            if (data.hasOwnProperty('is_superuser')) {
                obj['is_superuser'] = ApiClient.convertToType(data['is_superuser'], 'Boolean');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('is_staff')) {
                obj['is_staff'] = ApiClient.convertToType(data['is_staff'], 'Boolean');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('date_joined')) {
                obj['date_joined'] = ApiClient.convertToType(data['date_joined'], 'Date');
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [GameRoundWinnerUserGroups]);
            }
            if (data.hasOwnProperty('user_permissions')) {
                obj['user_permissions'] = ApiClient.convertToType(data['user_permissions'], [GameRoundWinnerUserPermissions]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
GameRoundWinnerUser.prototype['id'] = undefined;

/**
 * @member {String} password
 */
GameRoundWinnerUser.prototype['password'] = undefined;

/**
 * @member {Date} last_login
 */
GameRoundWinnerUser.prototype['last_login'] = undefined;

/**
 * Designates that this user has all permissions without explicitly assigning them.
 * @member {Boolean} is_superuser
 */
GameRoundWinnerUser.prototype['is_superuser'] = undefined;

/**
 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
 * @member {String} username
 */
GameRoundWinnerUser.prototype['username'] = undefined;

/**
 * @member {String} first_name
 */
GameRoundWinnerUser.prototype['first_name'] = undefined;

/**
 * @member {String} last_name
 */
GameRoundWinnerUser.prototype['last_name'] = undefined;

/**
 * @member {String} email
 */
GameRoundWinnerUser.prototype['email'] = undefined;

/**
 * Designates whether the user can log into this admin site.
 * @member {Boolean} is_staff
 */
GameRoundWinnerUser.prototype['is_staff'] = undefined;

/**
 * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
 * @member {Boolean} is_active
 */
GameRoundWinnerUser.prototype['is_active'] = undefined;

/**
 * @member {Date} date_joined
 */
GameRoundWinnerUser.prototype['date_joined'] = undefined;

/**
 * @member {Array.<module:model/GameRoundWinnerUserGroups>} groups
 */
GameRoundWinnerUser.prototype['groups'] = undefined;

/**
 * @member {Array.<module:model/GameRoundWinnerUserPermissions>} user_permissions
 */
GameRoundWinnerUser.prototype['user_permissions'] = undefined;






export default GameRoundWinnerUser;

